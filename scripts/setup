#!/usr/bin/env bash

# Configures a fresh Ubuntu installation by installing necessary packages and initializing
# general configurations such as Git, SSH keys and dotfile setup.

source ./colors

# Variables
unset -v email
unset -v name
unset -v suffix
CONFIG_DIR="$HOME/.config"
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# TODO: Create .bash_aliases and source .generic_aliases from dotfiles

_help()
{
  echo "This scripts configures a fresh installation of Ubuntu with the basic necessities such as:"
  echo "relevant packages, Git configuration, SSH keys, etc."
  echo
  echo "Syntax: options.sh [-h|e|n]"
  echo "Options:"
  echo "  -h    Print this help"
  echo "  -e    Specify the email address to be used for configuration"
  echo "  -n    Specify the name of the user for which the configuration is created"
  echo "  -s    Specify the file suffix that will be used for the SSH key pair"
  echo
}

_wait_for_user() {
  local message=$1
  read -p "$message" </dev/tty
}

# Update existing packages and install commonly used ones
_update_and_install_general_packages() {
  info "Update apt and install necessary packages."
  sudo apt update
  sudo apt upgrade
  sudo apt install vim
  sudo apt install git
  sudo apt install htop
  sudo apt install jq
  sudo apt install gnome-tweaks # Necessary to enable the EurKey layout
  sudo apt install terminator
}

# Common Git configuration
_configure_git() {
  local user_name=$1
  local user_email=$2

  info "Configure Git installation."
  git config --global user.name $user_name
  git config --global user.email $user_email
  git config --global core.autocrlf false
  git config --gloabl core.symlinks true
  git config --global core.editor vim
  git config --global init.defaultBranch main
}

_clone_dotfiles_and_symlink() {
  info "Clone dotfiles and create relevant symLinks."

  if [[ ! -d "$CONFIG_DIR" ]]; then
    info "Configuration directory does not exist yet. Creating under $CONFIG_DIR."
    mkdir $CONFIG_DIR
  fi

  cd
  git clone git@github.com:rourei/.dotfiles.git
  ln -s .dotfiles/.vimrc .vimrc
  ln -s .dotfiles/.vim .vim
  ln -s .dotfiles/config/.inputrc .inputrc
  ln -s .dotfiles/config/terminator/ .config/terminator
}

_add_scripts_to_path() {
  info "Appending /scripts directory to path."

  if [[ ! -f $HOME/.bashrc ]]; then
    touch $HOME/.bashrc
  fi

  echo "# User additions" >> $HOME/.bashrc
  echo "export PATH=\$PATH:$SCRIPT_DIR" >> $HOME/.bashrc
}

_print_ps1_definition() {
  note "Manual step required: updating the PS1 defintion to include the current branch."
  note "Please replace the existing definition in the .bashrc with:"
  note "### Beginning of PS1 definition ###"
  echo
  cat ./assets/ps1_definition_with_git_support
  echo
  note "### End of PS1 definition ###"
}

main() {
  while getopts ":he:n:s:" option; do
    case $option in
      h) _help
         exit;;
      e) email=$OPTARG;;
      n) name=$OPTARG;;
      s) suffix=$OPTARG;;
     \?) echo "Error: Invalid option"
         return 1
         ;;
    esac
  done

  if [[ -z "$email" ]] || [[ -z "$name" ]]; then
    error "Missing required arguments. Please provide an email address (-e) and a name (-n)." >&2
    exit 1
  fi

  cd # start from home directory
  _update_and_install_general_packages
  _configure_git $name $email

  add_ssh_key_and_print_public_key $email $suffix
  _wait_for_user "Please add the public SSH key to your account. Press Enter when done."

  _clone_dotfiles_and_symlink
  _add_scripts_to_path
  _print_ps1_definition
  _wait_for_user "Press enter when the PS1 definition has been updated."
}

main "@"

